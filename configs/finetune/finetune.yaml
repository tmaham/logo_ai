model:
  base_learning_rate: 1.0e-5 #1e-4
  target: ldm.models.diffusion.ddpm.LatentDiffusion
  params:
    linear_start: 0.00085
    linear_end: 0.0120
    num_timesteps_cond: 1
    log_every_t: 200
    timesteps: 1000
    first_stage_key: "image"
    cond_stage_key: "caption"
    image_size: 64 # 32
    channels: 4
    cond_stage_trainable: false   # Note: different from the one we trained before
    conditioning_key: crossattn
    monitor: val/loss_simple_ema
    scale_factor: 0.18215
    use_ema: False

    unet_config:
      target: ldm.modules.diffusionmodules.openaimodel.UNetModel
      params:
        image_size: 32 # unused
        in_channels: 4
        out_channels: 4
        model_channels: 320
        attention_resolutions: [ 4, 2, 1 ]
        num_res_blocks: 2
        channel_mult: [ 1, 2, 4, 4 ]
        num_heads: 8
        use_spatial_transformer: True
        transformer_depth: 1
        context_dim: 768 # 1280
        use_checkpoint: True
        legacy: False

    first_stage_config:
      target: ldm.models.autoencoder.AutoencoderKL
      params:
        embed_dim: 4
        monitor: val/rec_loss
        ddconfig:
          double_z: true
          z_channels: 4
          resolution: 512 #256
          in_channels: 3
          out_ch: 3
          ch: 128
          ch_mult:
          - 1
          - 2
          - 4
          - 4
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0
        lossconfig:
          target: torch.nn.Identity

    cond_stage_config:
      target: ldm.modules.encoders.modules.FrozenCLIPEmbedder
    
    # cond_stage_config:
    #   target: ldm.modules.encoders.modules.BERTEmbedder
    #   params:
    #     n_embed: 1280
    #     n_layer: 32

    discriminator_config:
      target: ldm.modules.discriminator.Discriminator

    generator_config:
      target: ldm.modules.generator.Generator


data:
  target: main.DataModuleFromConfig
  params:
    batch_size: 1
    num_workers: 32
    wrap: false
    train:
      target: ldm.data.rasterizer.Rasterizer
      params:
        img_size: 512
        text: "R"
        caption: "4&*w^U&R2j"
        caption2: "4&*w^U&R2j"
        style_word: "okramun"
        images: "data/rabbit_ca"
        num_samples: 512
        make_black: False
    validation:
      target: ldm.data.rasterizer.Rasterizer
      params:
        img_size: 256
        text: "R"
        caption: "4&*w^U&R2j"
        caption2: "4&*w^U&R2j"
        style_word: "4&*w^U&R2j"
        images: "data/rabbit_ca"
        num_samples: 16
        make_black: False

lightning:
  modelcheckpoint:
    params:
      every_n_train_steps: 100
  callbacks:
    image_logger:
      target: main.ImageLogger
      params:
        batch_frequency: 1000
        max_images: 1
        increase_log_steps: False

  trainer:
    benchmark: True
    max_steps: 1000